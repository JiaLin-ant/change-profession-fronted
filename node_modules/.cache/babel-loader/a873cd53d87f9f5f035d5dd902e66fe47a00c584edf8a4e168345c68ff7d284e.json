{"ast":null,"code":"var _jsxFileName = \"/Users/linjia/code/change-profession-fronted/src/components/JobDetails.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { useJob } from '../contexts/JobContext';\nimport CountdownClock from './CountdownClock';\nimport ProbabilityMeter from './ProbabilityMeter';\nimport Timeline from './Timeline';\nimport JobImpact from './JobImpact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetails = () => {\n  _s();\n  const {\n    t\n  } = useLanguage();\n  const {\n    selectedJob\n  } = useJob();\n\n  // 组件挂载和更新时记录\n  useEffect(() => {\n    if (selectedJob) {\n      console.log('JobDetails mounted/updated with job:', selectedJob.title);\n      return () => {\n        console.log('JobDetails unmounting from job:', selectedJob.title);\n      };\n    }\n  }, [selectedJob]);\n  if (!selectedJob) {\n    return null;\n  }\n  console.log('Rendering JobDetails for:', selectedJob.title, 'with ID:', selectedJob.id);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"job-details\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 0.5\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedJob.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-visualization\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-row\",\n        children: [/*#__PURE__*/_jsxDEV(CountdownClock, {\n          predictedYear: selectedJob.predictedYear,\n          automationProbability: selectedJob.automationProbability\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProbabilityMeter, {\n          probability: selectedJob.automationProbability\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-row\",\n        children: [/*#__PURE__*/_jsxDEV(JobImpact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timeline, {\n          milestones: selectedJob.milestones\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, selectedJob.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetails, \"uKfX1NnakJ3m+DM1hRVAoF1bL/E=\", false, function () {\n  return [useLanguage, useJob];\n});\n_c = JobDetails;\nexport default JobDetails;\nvar _c;\n$RefreshReg$(_c, \"JobDetails\");","map":{"version":3,"names":["React","useEffect","motion","useLanguage","useJob","CountdownClock","ProbabilityMeter","Timeline","JobImpact","jsxDEV","_jsxDEV","JobDetails","_s","t","selectedJob","console","log","title","id","div","className","initial","opacity","animate","transition","duration","children","fileName","_jsxFileName","lineNumber","columnNumber","predictedYear","automationProbability","probability","milestones","_c","$RefreshReg$"],"sources":["/Users/linjia/code/change-profession-fronted/src/components/JobDetails.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { useJob } from '../contexts/JobContext';\nimport CountdownClock from './CountdownClock';\nimport ProbabilityMeter from './ProbabilityMeter';\nimport Timeline from './Timeline';\nimport JobIcon3D from './JobIcon3D';\nimport AdaptationStrategies from './AdaptationStrategies';\nimport JobImpact from './JobImpact';\n\nconst JobDetails: React.FC = () => {\n  const { t } = useLanguage();\n  const { selectedJob } = useJob();\n  \n  // 组件挂载和更新时记录\n  useEffect(() => {\n    if (selectedJob) {\n      console.log('JobDetails mounted/updated with job:', selectedJob.title);\n      \n      return () => {\n        console.log('JobDetails unmounting from job:', selectedJob.title);\n      };\n    }\n  }, [selectedJob]);\n  \n  if (!selectedJob) {\n    return null;\n  }\n  \n  console.log('Rendering JobDetails for:', selectedJob.title, 'with ID:', selectedJob.id);\n  \n  return (\n    <motion.div \n      className=\"job-details\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      key={selectedJob.id}\n    >\n      <h2>{selectedJob.title}</h2>\n      \n      <div className=\"data-visualization\">\n        <div className=\"visualization-row\">\n          <CountdownClock \n            predictedYear={selectedJob.predictedYear} \n            automationProbability={selectedJob.automationProbability}\n          />\n          <ProbabilityMeter probability={selectedJob.automationProbability} />\n        </div>\n        \n        <div className=\"visualization-row\">\n          <JobImpact />\n          <Timeline milestones={selectedJob.milestones} />\n        </div>\n\n      </div>\n    </motion.div>\n  );\n};\n\nexport default JobDetails; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}