{"ast":null,"code":"var _jsxFileName = \"/Users/linjia/code/change-profession-fronted/src/components/JobIcon3D.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotatingIcon = ({\n  jobId,\n  riskLevel\n}) => {\n  _s();\n  const meshRef = useRef(null);\n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.y += 0.01;\n    }\n  });\n\n  // 确定颜色\n  let color;\n  switch (riskLevel) {\n    case 'low':\n      color = '#4CAF50'; // 绿色\n      break;\n    case 'medium':\n      color = '#FF9800'; // 橙色\n      break;\n    case 'high':\n      color = '#F44336'; // 红色\n      break;\n    default:\n      color = '#2196F3';\n    // 蓝色\n  }\n\n  // 确定几何体\n  let geometry;\n  switch (jobId) {\n    case 'programmer':\n      return /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: meshRef,\n        children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n          args: [1.5, 1.5, 1.5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    case 'doctor':\n      return /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: meshRef,\n        children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n          args: [1, 32, 32]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    case 'driver':\n      return /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: meshRef,\n        children: [/*#__PURE__*/_jsxDEV(\"torusGeometry\", {\n          args: [1, 0.4, 16, 32]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: meshRef,\n        children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n          args: [1, 1, 1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n  }\n};\n_s(RotatingIcon, \"/vg1AmA8+P3+Fj0/y210JTVKtL0=\", false, function () {\n  return [useFrame];\n});\n_c = RotatingIcon;\nconst JobIcon3D = ({\n  jobId,\n  riskLevel\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-icon-3d\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\u804C\\u4E1A\\u53D8\\u9769\\u7A0B\\u5EA6: \", riskLevel === 'low' ? '低' : riskLevel === 'medium' ? '中' : '高']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-container\",\n      style: {\n        height: '200px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        camera: {\n          position: [0, 0, 5]\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          position: [10, 10, 10],\n          intensity: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RotatingIcon, {\n          jobId: jobId,\n          riskLevel: riskLevel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_c2 = JobIcon3D;\nexport default JobIcon3D;\nvar _c, _c2;\n$RefreshReg$(_c, \"RotatingIcon\");\n$RefreshReg$(_c2, \"JobIcon3D\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","jsxDEV","_jsxDEV","RotatingIcon","jobId","riskLevel","_s","meshRef","current","rotation","y","color","geometry","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","JobIcon3D","className","style","height","camera","position","intensity","_c2","$RefreshReg$"],"sources":["/Users/linjia/code/change-profession-fronted/src/components/JobIcon3D.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { Box, Sphere, Torus } from '@react-three/drei';\nimport * as THREE from 'three';\n\ninterface JobIcon3DProps {\n  jobId: string;\n  riskLevel: 'low' | 'medium' | 'high';\n}\n\nconst RotatingIcon: React.FC<JobIcon3DProps> = ({ jobId, riskLevel }) => {\n  const meshRef = useRef<THREE.Mesh>(null);\n  \n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.y += 0.01;\n    }\n  });\n  \n  // 确定颜色\n  let color;\n  switch (riskLevel) {\n    case 'low':\n      color = '#4CAF50'; // 绿色\n      break;\n    case 'medium':\n      color = '#FF9800'; // 橙色\n      break;\n    case 'high':\n      color = '#F44336'; // 红色\n      break;\n    default:\n      color = '#2196F3'; // 蓝色\n  }\n  \n  // 确定几何体\n  let geometry;\n  switch (jobId) {\n    case 'programmer':\n      return (\n        <mesh ref={meshRef}>\n          <boxGeometry args={[1.5, 1.5, 1.5]} />\n          <meshStandardMaterial color={color} />\n        </mesh>\n      );\n    case 'doctor':\n      return (\n        <mesh ref={meshRef}>\n          <sphereGeometry args={[1, 32, 32]} />\n          <meshStandardMaterial color={color} />\n        </mesh>\n      );\n    case 'driver':\n      return (\n        <mesh ref={meshRef}>\n          <torusGeometry args={[1, 0.4, 16, 32]} />\n          <meshStandardMaterial color={color} />\n        </mesh>\n      );\n    default:\n      return (\n        <mesh ref={meshRef}>\n          <boxGeometry args={[1, 1, 1]} />\n          <meshStandardMaterial color={color} />\n        </mesh>\n      );\n  }\n};\n\nconst JobIcon3D: React.FC<JobIcon3DProps> = ({ jobId, riskLevel }) => {\n  return (\n    <div className=\"job-icon-3d\">\n      <h3>职业变革程度: {riskLevel === 'low' ? '低' : riskLevel === 'medium' ? '中' : '高'}</h3>\n      <div className=\"icon-container\" style={{ height: '200px' }}>\n        <Canvas camera={{ position: [0, 0, 5] }}>\n          <ambientLight intensity={0.5} />\n          <pointLight position={[10, 10, 10]} intensity={1} />\n          <RotatingIcon jobId={jobId} riskLevel={riskLevel} />\n        </Canvas>\n      </div>\n    </div>\n  );\n};\n\nexport default JobIcon3D; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAStD,MAAMC,YAAsC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAMC,OAAO,GAAGT,MAAM,CAAa,IAAI,CAAC;EAExCE,QAAQ,CAAC,MAAM;IACb,IAAIO,OAAO,CAACC,OAAO,EAAE;MACnBD,OAAO,CAACC,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,IAAI;IACpC;EACF,CAAC,CAAC;;EAEF;EACA,IAAIC,KAAK;EACT,QAAQN,SAAS;IACf,KAAK,KAAK;MACRM,KAAK,GAAG,SAAS,CAAC,CAAC;MACnB;IACF,KAAK,QAAQ;MACXA,KAAK,GAAG,SAAS,CAAC,CAAC;MACnB;IACF,KAAK,MAAM;MACTA,KAAK,GAAG,SAAS,CAAC,CAAC;MACnB;IACF;MACEA,KAAK,GAAG,SAAS;IAAE;EACvB;;EAEA;EACA,IAAIC,QAAQ;EACZ,QAAQR,KAAK;IACX,KAAK,YAAY;MACf,oBACEF,OAAA;QAAMW,GAAG,EAAEN,OAAQ;QAAAO,QAAA,gBACjBZ,OAAA;UAAaa,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtCjB,OAAA;UAAsBS,KAAK,EAAEA;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAEX,KAAK,QAAQ;MACX,oBACEjB,OAAA;QAAMW,GAAG,EAAEN,OAAQ;QAAAO,QAAA,gBACjBZ,OAAA;UAAgBa,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrCjB,OAAA;UAAsBS,KAAK,EAAEA;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAEX,KAAK,QAAQ;MACX,oBACEjB,OAAA;QAAMW,GAAG,EAAEN,OAAQ;QAAAO,QAAA,gBACjBZ,OAAA;UAAea,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzCjB,OAAA;UAAsBS,KAAK,EAAEA;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAEX;MACE,oBACEjB,OAAA;QAAMW,GAAG,EAAEN,OAAQ;QAAAO,QAAA,gBACjBZ,OAAA;UAAaa,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChCjB,OAAA;UAAsBS,KAAK,EAAEA;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;EAEb;AACF,CAAC;AAACb,EAAA,CAzDIH,YAAsC;EAAA,QAG1CH,QAAQ;AAAA;AAAAoB,EAAA,GAHJjB,YAAsC;AA2D5C,MAAMkB,SAAmC,GAAGA,CAAC;EAAEjB,KAAK;EAAEC;AAAU,CAAC,KAAK;EACpE,oBACEH,OAAA;IAAKoB,SAAS,EAAC,aAAa;IAAAR,QAAA,gBAC1BZ,OAAA;MAAAY,QAAA,GAAI,wCAAQ,EAACT,SAAS,KAAK,KAAK,GAAG,GAAG,GAAGA,SAAS,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjFjB,OAAA;MAAKoB,SAAS,EAAC,gBAAgB;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAV,QAAA,eACzDZ,OAAA,CAACH,MAAM;QAAC0B,MAAM,EAAE;UAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAAE,CAAE;QAAAZ,QAAA,gBACtCZ,OAAA;UAAcyB,SAAS,EAAE;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChCjB,OAAA;UAAYwB,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;UAACC,SAAS,EAAE;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDjB,OAAA,CAACC,YAAY;UAACC,KAAK,EAAEA,KAAM;UAACC,SAAS,EAAEA;QAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACS,GAAA,GAbIP,SAAmC;AAezC,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}