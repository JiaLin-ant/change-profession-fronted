{"ast":null,"code":"var _jsxFileName = \"/Users/linjia/code/change-profession-fronted/src/components/ProbabilityMeter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProbabilityMeter = ({\n  probability\n}) => {\n  _s();\n  const [particles, setParticles] = useState([]);\n\n  // 计算圆环上的坐标\n  const getCoordinates = useCallback((angle, distance) => {\n    const radius = 100; // 圆环半径\n    const x = 50 + Math.cos(angle) * radius * distance / 100;\n    const y = 50 + Math.sin(angle) * radius * distance / 100;\n    return {\n      x,\n      y\n    };\n  }, []);\n\n  // 根据概率调整粒子速度和数量\n  const particleSpeed = useCallback(() => {\n    const baseSpeed = 0.005;\n    return baseSpeed * (1 + probability / 50); // 概率越高，速度越快\n  }, [probability]);\n  const particleCount = useMemo(() => {\n    return Math.floor(probability / 2) + 10; // 概率越高，粒子越多\n  }, [probability]);\n  useEffect(() => {\n    // 生成沿着进度条的粒子\n    const maxAngle = probability / 100 * Math.PI * 2;\n    const speed = particleSpeed();\n    const newParticles = Array.from({\n      length: particleCount\n    }, (_, i) => {\n      const angle = Math.random() * maxAngle;\n      return {\n        id: i,\n        angle,\n        distance: 0.9 + Math.random() * 0.2,\n        size: Math.random() * 4 + 2,\n        speed: speed * (Math.random() * 0.5 + 0.75) * (Math.random() > 0.5 ? 1 : -1),\n        pulse: Math.random() * 2\n      };\n    });\n    setParticles(newParticles);\n  }, [probability, particleCount, particleSpeed]);\n\n  // 动画粒子\n  useEffect(() => {\n    let animationFrameId;\n    const animateParticles = () => {\n      setParticles(prevParticles => prevParticles.map(particle => {\n        const newAngle = (particle.angle + particle.speed) % (Math.PI * 2);\n        const maxAngle = probability / 100 * Math.PI * 2;\n\n        // 添加脉冲效果 - 概率越高，脉冲越强\n        const pulseFactor = 1 + probability / 100 * 0.5;\n        const pulseSpeed = 0.05 * pulseFactor;\n        const newPulse = (particle.pulse + pulseSpeed) % (Math.PI * 2);\n        return {\n          ...particle,\n          angle: newAngle > 0 && newAngle < maxAngle ? newAngle : newAngle <= 0 ? maxAngle - 0.01 : 0.01,\n          pulse: newPulse\n        };\n      }));\n      animationFrameId = requestAnimationFrame(animateParticles);\n    };\n    animationFrameId = requestAnimationFrame(animateParticles);\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n    };\n  }, [probability]);\n\n  // 确定颜色\n  const getColor = useCallback(() => {\n    if (probability < 30) return '#4CAF50'; // 绿色 - 低风险\n    if (probability < 70) return '#FF9800'; // 橙色 - 中风险\n    return '#F44336'; // 红色 - 高风险\n  }, [probability]);\n  const circumference = 2 * Math.PI * 90; // 圆环周长\n  const strokeDashoffset = circumference * (1 - probability / 100);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"probability-meter\",\n    initial: {\n      opacity: 0,\n      scale: 0.8\n    },\n    animate: {\n      opacity: 1,\n      scale: 1\n    },\n    transition: {\n      duration: 0.8,\n      delay: 0.2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"AI\\u5F71\\u54CD\\u7A0B\\u5EA6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meter-container\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"200\",\n        height: \"200\",\n        viewBox: \"0 0 200 200\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"100\",\n          cy: \"100\",\n          r: \"90\",\n          fill: \"none\",\n          stroke: \"#e0e0e0\",\n          strokeWidth: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.circle, {\n          cx: \"100\",\n          cy: \"100\",\n          r: \"90\",\n          fill: \"none\",\n          stroke: getColor(),\n          strokeWidth: \"10\",\n          strokeDasharray: circumference,\n          initial: {\n            strokeDashoffset: circumference\n          },\n          animate: {\n            strokeDashoffset\n          },\n          transition: {\n            duration: 1.5,\n            ease: \"easeOut\"\n          },\n          transform: \"rotate(-90 100 100)\",\n          strokeLinecap: \"round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), particles.map(particle => {\n          const {\n            x,\n            y\n          } = getCoordinates(particle.angle, particle.distance);\n          const pulseSize = 1 + Math.sin(particle.pulse) * 0.3;\n          return /*#__PURE__*/_jsxDEV(motion.circle, {\n            cx: `${x}%`,\n            cy: `${y}%`,\n            r: particle.size * pulseSize,\n            fill: getColor(),\n            animate: {\n              opacity: [0.4, 0.8, 0.4],\n              r: [particle.size, particle.size * (1.2 + probability / 200), particle.size]\n            },\n            transition: {\n              duration: 1 + probability / 100 * 2,\n              repeat: Infinity,\n              repeatType: \"reverse\"\n            }\n          }, particle.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"100\",\n          y: \"100\",\n          textAnchor: \"middle\",\n          dominantBaseline: \"middle\",\n          fontSize: \"36\",\n          fontWeight: \"bold\",\n          fill: getColor(),\n          children: [probability, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(ProbabilityMeter, \"/ATOGBe2vxwKpArGrSdC0AOjrUo=\");\n_c = ProbabilityMeter;\nexport default ProbabilityMeter;\nvar _c;\n$RefreshReg$(_c, \"ProbabilityMeter\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useMemo","motion","jsxDEV","_jsxDEV","ProbabilityMeter","probability","_s","particles","setParticles","getCoordinates","angle","distance","radius","x","Math","cos","y","sin","particleSpeed","baseSpeed","particleCount","floor","maxAngle","PI","speed","newParticles","Array","from","length","_","i","random","id","size","pulse","animationFrameId","animateParticles","prevParticles","map","particle","newAngle","pulseFactor","pulseSpeed","newPulse","requestAnimationFrame","cancelAnimationFrame","getColor","circumference","strokeDashoffset","div","className","initial","opacity","scale","animate","transition","duration","delay","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","viewBox","cx","cy","r","fill","stroke","strokeWidth","circle","strokeDasharray","ease","transform","strokeLinecap","pulseSize","repeat","Infinity","repeatType","textAnchor","dominantBaseline","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["/Users/linjia/code/change-profession-fronted/src/components/ProbabilityMeter.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface ProbabilityMeterProps {\n  probability: number; // 0-100\n}\n\ninterface Particle {\n  id: number;\n  angle: number;\n  distance: number;\n  size: number;\n  speed: number;\n  pulse: number;\n}\n\nconst ProbabilityMeter: React.FC<ProbabilityMeterProps> = ({ probability }) => {\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  // 计算圆环上的坐标\n  const getCoordinates = useCallback((angle: number, distance: number) => {\n    const radius = 100; // 圆环半径\n    const x = 50 + Math.cos(angle) * radius * distance / 100;\n    const y = 50 + Math.sin(angle) * radius * distance / 100;\n    return { x, y };\n  }, []);\n  \n  // 根据概率调整粒子速度和数量\n  const particleSpeed = useCallback(() => {\n    const baseSpeed = 0.005;\n    return baseSpeed * (1 + probability / 50); // 概率越高，速度越快\n  }, [probability]);\n  \n  const particleCount = useMemo(() => {\n    return Math.floor(probability / 2) + 10; // 概率越高，粒子越多\n  }, [probability]);\n  \n  useEffect(() => {\n    // 生成沿着进度条的粒子\n    const maxAngle = (probability / 100) * Math.PI * 2;\n    const speed = particleSpeed();\n    \n    const newParticles = Array.from({ length: particleCount }, (_, i) => {\n      const angle = Math.random() * maxAngle;\n      return {\n        id: i,\n        angle,\n        distance: 0.9 + Math.random() * 0.2,\n        size: Math.random() * 4 + 2,\n        speed: speed * (Math.random() * 0.5 + 0.75) * (Math.random() > 0.5 ? 1 : -1),\n        pulse: Math.random() * 2\n      };\n    });\n    \n    setParticles(newParticles);\n  }, [probability, particleCount, particleSpeed]);\n  \n  // 动画粒子\n  useEffect(() => {\n    let animationFrameId: number;\n    \n    const animateParticles = () => {\n      setParticles(prevParticles => \n        prevParticles.map(particle => {\n          const newAngle = (particle.angle + particle.speed) % (Math.PI * 2);\n          const maxAngle = (probability / 100) * Math.PI * 2;\n          \n          // 添加脉冲效果 - 概率越高，脉冲越强\n          const pulseFactor = 1 + (probability / 100) * 0.5;\n          const pulseSpeed = 0.05 * pulseFactor;\n          const newPulse = (particle.pulse + pulseSpeed) % (Math.PI * 2);\n          \n          return {\n            ...particle,\n            angle: newAngle > 0 && newAngle < maxAngle ? newAngle : \n                  newAngle <= 0 ? maxAngle - 0.01 : 0.01,\n            pulse: newPulse\n          };\n        })\n      );\n      animationFrameId = requestAnimationFrame(animateParticles);\n    };\n    \n    animationFrameId = requestAnimationFrame(animateParticles);\n    \n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n    };\n  }, [probability]);\n  \n  // 确定颜色\n  const getColor = useCallback(() => {\n    if (probability < 30) return '#4CAF50'; // 绿色 - 低风险\n    if (probability < 70) return '#FF9800'; // 橙色 - 中风险\n    return '#F44336'; // 红色 - 高风险\n  }, [probability]);\n  \n  const circumference = 2 * Math.PI * 90; // 圆环周长\n  const strokeDashoffset = circumference * (1 - probability / 100);\n  \n  return (\n    <motion.div \n      className=\"probability-meter\"\n      initial={{ opacity: 0, scale: 0.8 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.8, delay: 0.2 }}\n    >\n      <h3>AI影响程度</h3>\n      <div className=\"meter-container\">\n        <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\n          {/* 背景圆环 */}\n          <circle\n            cx=\"100\"\n            cy=\"100\"\n            r=\"90\"\n            fill=\"none\"\n            stroke=\"#e0e0e0\"\n            strokeWidth=\"10\"\n          />\n          \n          {/* 进度圆环 */}\n          <motion.circle\n            cx=\"100\"\n            cy=\"100\"\n            r=\"90\"\n            fill=\"none\"\n            stroke={getColor()}\n            strokeWidth=\"10\"\n            strokeDasharray={circumference}\n            initial={{ strokeDashoffset: circumference }}\n            animate={{ strokeDashoffset }}\n            transition={{ duration: 1.5, ease: \"easeOut\" }}\n            transform=\"rotate(-90 100 100)\"\n            strokeLinecap=\"round\"\n          />\n          \n          {/* 粒子 */}\n          {particles.map(particle => {\n            const { x, y } = getCoordinates(particle.angle, particle.distance);\n            const pulseSize = 1 + Math.sin(particle.pulse) * 0.3;\n            \n            return (\n              <motion.circle\n                key={particle.id}\n                cx={`${x}%`}\n                cy={`${y}%`}\n                r={particle.size * pulseSize}\n                fill={getColor()}\n                animate={{\n                  opacity: [0.4, 0.8, 0.4],\n                  r: [\n                    particle.size, \n                    particle.size * (1.2 + probability / 200), \n                    particle.size\n                  ],\n                }}\n                transition={{\n                  duration: 1 + (probability / 100) * 2,\n                  repeat: Infinity,\n                  repeatType: \"reverse\"\n                }}\n              />\n            );\n          })}\n          \n          {/* 概率文本 */}\n          <text\n            x=\"100\"\n            y=\"100\"\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            fontSize=\"36\"\n            fontWeight=\"bold\"\n            fill={getColor()}\n          >\n            {probability}%\n          </text>\n        </svg>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default ProbabilityMeter; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}