{"ast":null,"code":"var _jsxFileName = \"/Users/linjia/code/change-profession-fronted/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport JobSearch from './components/JobSearch';\nimport { jobsData } from './data/jobsData';\nimport { jobsDataEn } from './data/jobsDataEn';\nimport './App.css';\nimport JobDetails from './components/JobDetails';\nimport { LanguageProvider } from './contexts/LanguageContext';\nimport LanguageSwitcher from './components/LanguageSwitcher';\nimport { useLanguage } from './contexts/LanguageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContent = () => {\n  _s();\n  const [selectedJob, setSelectedJob] = useState(null);\n  const {\n    t,\n    language\n  } = useLanguage();\n\n  // 根据当前语言选择职业数据\n  const currentJobsData = language === 'en' ? jobsDataEn : jobsData;\n\n  // 在组件加载时从本地存储加载选择的职业ID，或使用默认职业\n  useEffect(() => {\n    const savedJobId = localStorage.getItem('selectedJobId');\n    if (savedJobId) {\n      // 如果有保存的职业ID，则使用它\n      const job = currentJobsData.find(job => job.id === savedJobId);\n      if (job) {\n        console.log('Loading saved job:', job.title);\n        setSelectedJob(job);\n      } else {\n        // 如果找不到保存的职业，则使用默认职业\n        const defaultJob = currentJobsData.find(job => job.id === \"programmer\") || currentJobsData[0];\n        console.log('Using default job:', defaultJob.title);\n        setSelectedJob(defaultJob);\n      }\n    } else {\n      // 如果没有保存的职业ID，则使用默认职业\n      const defaultJob = currentJobsData.find(job => job.id === \"programmer\") || currentJobsData[0];\n      console.log('No saved job, using default:', defaultJob.title);\n      setSelectedJob(defaultJob);\n    }\n  }, [language, currentJobsData]);\n\n  // 处理职业选择\n  const handleSelectJob = job => {\n    console.log('User selected job:', job.title);\n    // 保存选择的职业ID到本地存储\n    localStorage.setItem('selectedJobId', job.id);\n    setSelectedJob(job);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(LanguageSwitcher, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t('app.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t('app.subtitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(JobSearch, {\n        onSelectJob: handleSelectJob,\n        initialJob: selectedJob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), selectedJob && /*#__PURE__*/_jsxDEV(JobDetails, {\n        selectedJob: selectedJob\n      }, selectedJob.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContent, \"IBRkZmLJ6baXoklVy43JftdigIg=\", false, function () {\n  return [useLanguage];\n});\n_c = AppContent;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(LanguageProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","JobSearch","jobsData","jobsDataEn","JobDetails","LanguageProvider","LanguageSwitcher","useLanguage","jsxDEV","_jsxDEV","AppContent","_s","selectedJob","setSelectedJob","t","language","currentJobsData","savedJobId","localStorage","getItem","job","find","id","console","log","title","defaultJob","handleSelectJob","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectJob","initialJob","_c","App","_c2","$RefreshReg$"],"sources":["/Users/linjia/code/change-profession-fronted/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport JobSearch from './components/JobSearch';\nimport CountdownClock from './components/CountdownClock';\nimport ProbabilityMeter from './components/ProbabilityMeter';\nimport JobIcon3D from './components/JobIcon3D';\nimport Timeline from './components/Timeline';\nimport AdaptationStrategies from './components/AdaptationStrategies';\nimport StarfieldBackground from './components/StarfieldBackground';\nimport AlertOverlay from './components/AlertOverlay';\nimport { Job } from './types/types';\nimport { jobsData } from './data/jobsData';\nimport { jobsDataEn } from './data/jobsDataEn';\nimport './App.css';\nimport JobDetails from './components/JobDetails';\nimport { LanguageProvider } from './contexts/LanguageContext';\nimport LanguageSwitcher from './components/LanguageSwitcher';\nimport { useLanguage } from './contexts/LanguageContext';\n\nconst AppContent: React.FC = () => {\n  const [selectedJob, setSelectedJob] = useState<Job | null>(null);\n  const { t, language } = useLanguage();\n  \n  // 根据当前语言选择职业数据\n  const currentJobsData = language === 'en' ? jobsDataEn : jobsData;\n  \n  // 在组件加载时从本地存储加载选择的职业ID，或使用默认职业\n  useEffect(() => {\n    const savedJobId = localStorage.getItem('selectedJobId');\n    \n    if (savedJobId) {\n      // 如果有保存的职业ID，则使用它\n      const job = currentJobsData.find(job => job.id === savedJobId);\n      if (job) {\n        console.log('Loading saved job:', job.title);\n        setSelectedJob(job);\n      } else {\n        // 如果找不到保存的职业，则使用默认职业\n        const defaultJob = currentJobsData.find(job => job.id === \"programmer\") || currentJobsData[0];\n        console.log('Using default job:', defaultJob.title);\n        setSelectedJob(defaultJob);\n      }\n    } else {\n      // 如果没有保存的职业ID，则使用默认职业\n      const defaultJob = currentJobsData.find(job => job.id === \"programmer\") || currentJobsData[0];\n      console.log('No saved job, using default:', defaultJob.title);\n      setSelectedJob(defaultJob);\n    }\n  }, [language, currentJobsData]);\n  \n  // 处理职业选择\n  const handleSelectJob = (job: Job) => {\n    console.log('User selected job:', job.title);\n    // 保存选择的职业ID到本地存储\n    localStorage.setItem('selectedJobId', job.id);\n    setSelectedJob(job);\n  };\n  \n  return (\n    <div className=\"app\">\n      <header>\n        <LanguageSwitcher />\n        <h1>{t('app.title')}</h1>\n        <p>{t('app.subtitle')}</p>\n      </header>\n      <main>\n        <JobSearch onSelectJob={handleSelectJob} initialJob={selectedJob} />\n        {selectedJob && <JobDetails selectedJob={selectedJob} key={selectedJob.id} />}\n      </main>\n    </div>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <LanguageProvider>\n      <AppContent />\n    </LanguageProvider>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}